source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
load(here(paste("data/evansetal-18/clean/P",useSub,".Rdata",sep="")))
data$Trial
names(x)=par.names
load(here(paste("data/evansetal-18/clean/P",useSub,".Rdata",sep="")))
newSeed=Sys.time()
set.seed(as.numeric(newSeed))
out=0
names(x)=par.names
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
View(data)
trials = 1:949
a.a = 3
a.b = 5
a.r = .4
test = a.a*a.b^(a.r*trials)
plot(trials,test)
a.a = .1
a.b= .2
test = a.a*a.b^(a.r*trials)
plot(trials,test)
a.a = 1
a.b = .2
test = a.a*a.b^(a.r*trials)
plot(trials,test)
test = -a.a*a.b^(a.r*trials)
a.a = -1
test = -a.a*a.b^(a.r*trials)
plot(trials,test)
a.b = -2
test = -a.a*a.b^(a.r*trials)
plot(trials,test)
a.r = -.8
test = -a.a*a.b^(a.r*trials)
plot(trials,test)
a.r = -.01
test = -a.a*a.b^(a.r*trials)
plot(trials,test)
a.r = -.1
test = -a.a*a.b^(a.r*trials)
plot(trials,test)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
params =  apply(theta, 2, mean)
x =params
threshold = x["a.asym"]+x["a.start"]^x["a.rate"]*data$Trial
plot(data$Trial,threshold,"l")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
e
test=3+4*exp(x[.8]*data$Trial)
test=3+4*exp(.8*data$Trial)
plot(data$Trial,test)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
.Library
.libPaths("~/Library/Frameworks/R.framework/Resources/library")
lib = .libPaths()[1]
lib
lib = .libPaths()[1]
lib
lib = .libPaths()[1]
lib
library(ggplot2,lib.loc = lib)
.libPaths("~/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
lib = .libPaths()[1]
lib
library(ggplot2,lib.loc = lib)
"/Library/Frameworks/R.framework/Resources/library"
lib = .libPaths()[1]
lib
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.1_a-simple.R")
source("~/cloudstor/Gaze-Cueing/Modelling/dataset3/05.8_runDiffModel_simple.R")
View(data)
ev.data = data
chen.data = data
load("~/cloudstor/ParAcT/data/evansetal-18/clean/P10.Rdata")
load("~/cloudstor/ParAcT/data/evansetal-18/clean/P1.Rdata")
View(chen.data)
source("~/cloudstor/ParAcT/data/evansetal-18/parseRDK.R")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.1_a-simple.R")
load("~/cloudstor/Gaze-Cueing/Modelling/dataset3/07_Outputs/P71Simple_Model.Rdata")
source("~/cloudstor/ParAcT/data/evansetal-18/parseRDK.R")
conds=c(1,2)
source(file = here("modelling/evansetal-18/02_deep-background.R"))
conds = c(1, 2)
nSub = 9
for (useSub in 1:nSub) {
#Run DDM for each subject in n Subjects
load(here(
paste("data/evansetal-18/clean/P", useSub, ".Rdata", sep = "")
))
newSeed = Sys.time()
set.seed(as.numeric(newSeed))
log.dens.like = function (x, data, par.names) {
out = 0
names(x) = par.names
for (cond in conds) {
a = x["a"]
t0 = x["t0"]
v = x["v"]
z = 0.5
sv = 0
sz = 0
st0 = 0
s = 1
tmp = ddiffusion(
rt = data$Time[data$Cond == cond],
response = data$Resp[data$Cond == cond],
z = z * a,
a = a,
v = v,
t0 = t0 - (st0 / 2),
s = s,
sv = sv,
sz = sz,
st0 = st0
)
out = out + sum(log(pmax(tmp, 1e-10)))
}
out
}
theta.names = c("a", "t0",
"v")
savefile = here(
paste(
"modelling/evansetal-18/06_output/P",
useSub,
"simple.Rdata",
sep = ""
)
)
source(here("modelling/evansetal-18/03_background.R"))
source(here("modelling/evansetal-18/04_iterative-process.R"))
n.pars = length(theta.names)
AIC = -2 * max(weight) + 2 * n.pars
BIC = log(length(data$Time)) * n.pars - 2 * max(weight)
save(AIC,
BIC,
theta,
weight,
data,
burnin,
nmc,
n.chains,
theta.names,
conds,
file = savefile)
}
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.1_a-simple.R")
for (useSub in 1:nSub) { #Run DDM for each subject in n Subjects
load(here(
paste("data/evansetal-18/clean/P", useSub, ".Rdata", sep = "")
))
newSeed=Sys.time()
set.seed(as.numeric(newSeed))
log.dens.like = function (x,data,par.names) {
out=0
names(x)=par.names
for (cond in conds) {
a=x["a"]
t0=x["t0"]
v=x["v"]
z=0.5
sv=0
sz=0
st0=0
s=1
tmp=ddiffusion(rt=data$Time[data$Cond==cond],response=data$Resp[data$Cond==cond],z=z*a,a=a,v=v,t0=t0-(st0/2),s=s,sv=sv,sz=sz,st0=st0)
out=out+sum(log(pmax(tmp,1e-10)))
}
out
}
theta.names=c("a","t0",
"v")
savefile=paste("Modelling/dataset3/07_Outputs/P",useSub,"Simple_Model.Rdata",sep="")
source("Modelling/dataset3/03_background.R")
source("Modelling/dataset3/04_runIterativeProcess.R")
n.pars = length(theta.names)
AIC = -2*max(weight)+ 2*n.pars
BIC = log(length(data$Time))*n.pars-2*max(weight)
save(AIC, BIC, theta,weight,data,burnin,nmc,n.chains,theta.names,conds,
file=savefile)
}
library(here)
here())
here()
load("~/cloudstor/ParAcT/data/evansetal-18/clean/P1.Rdata")
View(data)
unique(data$Trial)
unique(data$Time)
class(data$Time)
data.ev = data.ev
data.ev = data
load("~/cloudstor/Gaze-Cueing/Modelling/dataset3/07_Outputs/P70_z_Model.Rdata")
data.chen = data
parseFeedbackType="Optim"
parseBlockType="Trial"
files=dir(here("data/evansetal-18/raw"))
data=NULL
subjgroups1=NULL
subjgroups2=NULL
subjgroups3 = NULL
for (n in 1:(length(files))) {
snum=as.numeric(substr(files[n],1,5))
if (as.character(substr(files[n],7,7)) == "O") {
feedbackType = as.character(substr(files[n],7,11))
if (as.character(substr(files[n],13,14)) == "Tr") {
blockType = as.character(substr(files[n],13,17))
} else {
blockType = as.character(substr(files[n],13,16))
}
} else {
feedbackType = as.character(substr(files[n],7,10))
if (as.character(substr(files[n],12,13)) == "Tr") {
blockType = as.character(substr(files[n],12,16))
} else {
blockType = as.character(substr(files[n],12,15))
}
}
tmp=read.table(file=here(paste("data/evansetal-18/raw",files[n],sep="/")),header=TRUE)
subjgroups1=c(subjgroups1,feedbackType)
subjgroups2=c(subjgroups2,blockType)
data=rbind(data,cbind(subject=snum,feedbackType=feedbackType,blockType=blockType,tmp))
}
nSubs = unique(data$subject)
S=length(nSubs)
data$RT=data$RT/1000
data=data[data$correct!=2,]
data=data[data$RT<10,]
participantsMeanAccuracy=tapply(data$correct,data$subject,mean)
len=length(participantsMeanAccuracy)
badSubs=NULL
for (i in 1:len) {
partID = nSubs[i]
if (participantsMeanAccuracy[paste(partID)] < 0.7) {
data=data[data$subject!=partID,]
badSubs=c(badSubs,i)
}
}
nSubs=nSubs[-badSubs]
subjgroups1=subjgroups1[-badSubs]
subjgroups2=subjgroups2[-badSubs]
subjgroups3=subjgroups3[-badSubs]
S=length(nSubs)
use.subs=subjgroups1==parseFeedbackType & subjgroups2==parseBlockType
use.subs=grep("TRUE",use.subs,perl=TRUE)
parsedData=list()
for (i in 1:(length(use.subs))) {
parsedData[[i]]=list(Cond=NULL,Time=NULL,Resp=NULL,Stim=NULL)
isSub=data$subject==nSubs[use.subs[i]]
#parsedData[[i]]$Cond=data$blkNum[isSub]
parsedData[[i]]$Cond=1
parsedData[[i]]$Time=data$RT[isSub]
parsedData[[i]]$Resp=data$correct[isSub]==1
parsedData[[i]]$Stim=data$winningDirection[isSub]
parsedData[[i]]$Trial = 1:length(parsedData[[i]]$Time)
parsedData[[i]]$TrialInBlock = data$trlNum[isSub]
parsedData[[i]]$Block = data$blkNum[isSub]
}
#data=parsedData
S=length(parsedData)
conds=unique(parsedData[[1]]$Cond)
n.cond=length(conds)
stims=unique(parsedData[[1]]$Stim)
n.stim=length(stims)
save(parsedData,S,conds,n.cond,stims,n.stim,
file=here(paste("data/evansetal-18/clean/parsedData-RDK-",parseFeedbackType,"-",parseBlockType,".Rdata",sep="")))
allData = data
i = 1
nSubs[use.subs[i]]
head(nSubs)
unique(data$subject)
source("~/cloudstor/ParAcT/data/evansetal-18/parseRDK.R")
View(data)
load("~/cloudstor/ParAcT/data/evansetal-18/clean/P1.Rdata")
load("~/cloudstor/ParAcT/data/evansetal-18/clean/P2.Rdata")
source(file = here("modelling/evansetal-18/02_deep-background.R"))
conds = c(1, 2)
nSub = 1
for (useSub in 1:nSub) {
#Run DDM for each subject in n Subjects
load(here(
paste("data/evansetal-18/clean/P", useSub, ".Rdata", sep = "")
))
newSeed = Sys.time()
set.seed(as.numeric(newSeed))
log.dens.like = function (x, data, par.names) {
out = 0
names(x) = par.names
for (cond in conds) {
a = x["a"]
t0 = x["t0"]
v = x["v"]
z = 0.5
sv = 0
sz = 0
st0 = 0
s = 1
tmp = ddiffusion(
rt = data$Time[data$Cond == cond],
response = data$Resp[data$Cond == cond],
z = z * a,
a = a,
v = v,
t0 = t0 - (st0 / 2),
s = s,
sv = sv,
sz = sz,
st0 = st0
)
out = out + sum(log(pmax(tmp, 1e-10)))
}
out
}
theta.names = c("a", "t0",
"v")
savefile = here(
paste(
"modelling/evansetal-18/06_output/P",
useSub,
"simple.Rdata",
sep = ""
)
)
source(here("modelling/evansetal-18/03_background.R"))
source(here("modelling/evansetal-18/04_iterative-process.R"))
n.pars = length(theta.names)
AIC = -2 * max(weight) + 2 * n.pars
BIC = log(length(data$Time)) * n.pars - 2 * max(weight)
save(AIC,
BIC,
theta,
weight,
data,
burnin,
nmc,
n.chains,
theta.names,
conds,
file = savefile)
}
log.dens.like = function (x, data, par.names) {
out = 0
names(x) = par.names
for (cond in conds) {
a = x["a"]
t0 = x["t0"]
v = x["v"]
z = 0.5
sv = 0
sz = 0
st0 = 0
s = 1
tmp = ddiffusion(
rt = data$Time[data$Cond == cond],
response = data$Resp[data$Cond == cond],
z = z * a,
a = a,
v = v,
t0 = t0 - (st0 / 2),
s = s,
sv = sv,
sz = sz,
st0 = st0
)
out = out + sum(log(pmax(tmp, 1e-10)))
}
out
}
debugonce(log.dens.like)
for (useSub in 1:nSub) {
#Run DDM for each subject in n Subjects
load(here(
paste("data/evansetal-18/clean/P", useSub, ".Rdata", sep = "")
))
newSeed = Sys.time()
set.seed(as.numeric(newSeed))
log.dens.like = function (x, data, par.names) {
out = 0
names(x) = par.names
for (cond in conds) {
a = x["a"]
t0 = x["t0"]
v = x["v"]
z = 0.5
sv = 0
sz = 0
st0 = 0
s = 1
tmp = ddiffusion(
rt = data$Time[data$Cond == cond],
response = data$Resp[data$Cond == cond],
z = z * a,
a = a,
v = v,
t0 = t0 - (st0 / 2),
s = s,
sv = sv,
sz = sz,
st0 = st0
)
out = out + sum(log(pmax(tmp, 1e-10)))
}
out
}
theta.names = c("a", "t0",
"v")
savefile = here(
paste(
"modelling/evansetal-18/06_output/P",
useSub,
"simple.Rdata",
sep = ""
)
)
source(here("modelling/evansetal-18/03_background.R"))
source(here("modelling/evansetal-18/04_iterative-process.R"))
n.pars = length(theta.names)
AIC = -2 * max(weight) + 2 * n.pars
BIC = log(length(data$Time)) * n.pars - 2 * max(weight)
save(AIC,
BIC,
theta,
weight,
data,
burnin,
nmc,
n.chains,
theta.names,
conds,
file = savefile)
}
library(mnormt)
install.packages("LaplacesDemon")
library(LaplacesDemon)
x = seq(-10, 10, 0.1)
y = seq(-10, 10, 0.1)
mu0 = c(1,1)
nu = 10
lambda = .5
covMat = function(sd1, sd2, rho) {
matrix(c(sqrt(sd1), rho * sd1 * sd2, rho * sd1 * sd2, sqrt(sd2)), 2, 2)
}
Sigma = covMat(1,1,.2)
f = dnorminvwishart(mu = cbind(x,y),mu0, lambda,Sigma,Sigma,nu)
lMu = c(5,30)
f = dnorminvwishart(mu = cbind(x,y),mu0, lambda,Sigma,Sigma,nu)*dmnorm(cbind(x,y),lMu,Sigma)
f
plot(x,f)
lMu = c(0,0)
f = dnorminvwishart(mu = cbind(x,y),mu0, lambda,Sigma,Sigma,nu)*dmnorm(cbind(x,y),lMu,Sigma)
plot(x,f)
mu0 = c(-5,-5)
f = dnorminvwishart(mu = cbind(x,y),mu0, lambda,Sigma,Sigma,nu)*dmnorm(cbind(x,y),lMu,Sigma)
plot(x,f)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.1_a-simple.R")
unique(data$Cond)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.1_a-simple.R")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.3_a-power.R")
rm(list=ls())
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.3_a-power.R")
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.3_a-power.R")
unique(data$Cond)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.4_a-exp.R")
View(log.dens.prior)
source("~/cloudstor/ParAcT/modelling/evansetal-18/05_run-models/5.1.3_a-power.R")
thresholdPow = as.data.frame(matrix(nrow = 0, ncol = 3))
for (i in 1:n) {
load(here(
paste("modelling/evansetal-18/06_output/P", i, "power.Rdata", sep = "")
))
params =  apply(theta, 2, mean)
threshold = as.data.frame(params["a.asym"] + params["a.start"] * trials ^
params["a.rate"])
threshold$Participant =  i
threshold$Trial = trials
thresholdPow  = rbind(thresholdPow, threshold)
}
n = 1
nTrials = 987
trials = 1:nTrials
thresholdPow = as.data.frame(matrix(nrow = 0, ncol = 3))
for (i in 1:n) {
load(here(
paste("modelling/evansetal-18/06_output/P", i, "power.Rdata", sep = "")
))
params =  apply(theta, 2, mean)
threshold = as.data.frame(params["a.asym"] + params["a.start"] * trials ^
params["a.rate"])
threshold$Participant =  i
threshold$Trial = trials
thresholdPow  = rbind(thresholdPow, threshold)
}
colnames(thresholdPow) = c("Threshold", "Participant", "Trial")
ggplot(data = thresholdPow) +
geom_line(aes(x = Trial, y = Threshold, group = Participant)) +
theme_classic()
params =  apply(theta, 2, mean)
params
theta
load("~/cloudstor/ParAcT/modelling/evansetal-18/06_output/P1_a-exp.Rdata")
apply(theta,2,mean)
x = apply(theta,2,mean)
thresh = x["a.asym"]+(x["a.asym"]+x["a.start"])*exp(-x["a.rate"]*data$Trial)
plot(data$Trial,thresh)
plot(data$Trial,thresh,"l")
load("~/cloudstor/ParAcT/modelling/evansetal-18/06_output/P1a-power.Rdata")
params =  apply(theta, 2, mean)
params
x = params
thresh = x["a.asym"]+(x["a.asym"] + x["a.start"])*data$Trial^(-x["a.rate"])
plot(data$Trial,thresh,"l")
