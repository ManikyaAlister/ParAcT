#!/bin/bash

# set up job array (make sure the array length is nModels * nParticipants)
#SBATCH --array=1-2205

# Partition for the job:
#SBATCH --partition=cascade

# Multithreaded (SMP) job: must run on one node 
#SBATCH --nodes=1

# The name of the job:
#SBATCH --job-name="paract"

# Maximum number of tasks/CPU cores used by the job:
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1

# The amount of memory in megabytes per process in the job:
#SBATCH --mem=2G

# Use this email address:
#SBATCH --mail-user=alisterm@student.unimelb.edu.au

# Send yourself an email when the job:

# ends successfully
#SBATCH --mail-type=END

# Where to save output logs 
#SBATCH --output=slurm_output/%A_%a.out
#SBATCH --error=slurm_output/%A_%a.err

# The maximum running time of the job in days-hours:mins:sec
#SBATCH --time=0-3:0:00

# check that the script is launched with sbatch
if [ "x$SLURM_JOB_ID" == "x" ]; then
   echo "You need to submit your job to the queuing system with sbatch"
   exit 1
fi

# Run the job from the directory where it was launched (default)

# The modules to load:
module load foss/2022a R/4.2.1

normal_2p=("a-exp-blocked+v-linear-blocked" "a-exp+v-exp" "a-linear-blocked+v-linear-blocked" "a-linear-blocked+v-linear" "a-block-trial-exp+v-exp")
optim_2p=("a-step-fixed+v-step-fixed" "a-exp+v-exp" "a-exp+v-linear-blocked" "a-exp+v-step-fixed" "a-dExp-blocked+v-linear-blocked" "a-exp-blocked+v-linear-blocked" "a-linear-blocked+v-linear-blocked" "a-dExp+v-dExp")
knowles_2p=("a-exp+v-exp" "a-exp+v-linear" "a-exp+v-linear-blocked" "a-linear-blocked+v-linear" "a-linear+v-linear")
models_1p=("simple" "a-linear" "a-exp" "a-dExp" "a-linear-blocked"  "a-exp-blocked" "a-dExp-blocked" "a-block-trial-exp" "v-linear" "v-exp" "v-dExp" "v-linear-blocked" "v-exp-blocked" "v-block-trial-exp" "v-dExp-blocked")   


# Set the model script names
models=knowles_2p
#
#

n_models=15
data="knowles"

# Models not run (put below)
# 
#  
# Set the participant numbers (make sure the slurm array is set up for the correct model * participant combintation)
participants=($(seq 1 147))

# Calculate the model and participant indices from the job array task ID
model_idx=$(((SLURM_ARRAY_TASK_ID-1) % n_models)) # make sure you correctly indicate the number of models after '%'
echo "model idx"
echo $model_idx
participant_idx=$(((SLURM_ARRAY_TASK_ID-1) / n_models)) # make sure you correctly indicate the number of models after '/'

echo "participant idx"
echo $participant_idx

# Run the R script with the input and output files and the participant number as a command line argument
Rscript /data/gpfs/projects/punim1751/ParAcT/modelling/generic_scripts/run-paract-DDM.R ${participants[$participant_idx]} ${data} ${models[$model_idx]} 

##DO NOT ADD/EDIT BEYOND THIS LINE##
##Job monitor command to list the resource usage
my-job-stats -a -n -s