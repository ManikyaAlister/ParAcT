#!/bin/bash


# Partition for the job:
#SBATCH --partition=physical

# Multithreaded (SMP) job: must run on one node 
#SBATCH --nodes=1

# The name of the job:
#SBATCH --job-name="job-set-up"

# Maximum number of tasks/CPU cores used by the job:
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1

# The amount of memory in megabytes per process in the job:
#SBATCH --mem=4G

# Use this email address:
#SBATCH --mail-user=alisterm@student.unimelb.edu.au

# Send yourself an email when the job:

# ends successfully
#SBATCH --mail-type=END

# Where to save output logs 
#SBATCH --output=slurm_output/%A_%a.out
#SBATCH --error=slurm_output/%A_%a.err

# The maximum running time of the job in days-hours:mins:sec
#SBATCH --time=7-1:0:00

# check that the script is launched with sbatch
if [ "x$SLURM_JOB_ID" == "x" ]; then
   echo "You need to submit your job to the queuing system with sbatch"
   exit 1
fi

# Run the job from the directory where it was launched (default)

# The modules to load:
module load r/4.2.0

# Define the list of models and participants
models=("5.1.1-simple" "5.1.2_a-linear") #  "5.1.3_a-power" "5.1.5_a-delayed-exp" "5.1.6_a-delayed-pow" "5.1.7_a-exp-mir" "5.2.2_v-linear" "5.2.3_v-power" "5.2.4_v-exp" "5.2.5_v-delayed-pow" "5.2.6_v-delayed-exp" "5.1.8-a-simple-blocked" "5.1.9-a-complex-blocked" "5.2.8-v-simple-blocked" "5.2.9-v-complex-blocked")
participants=(1-9)

# Iterate over the model and participant IDs and run the R script for each combination
for model in "${models[@]}"; do
  for participant in "${participants[@]}"; do
    # input_file="inputs/${model}_${participant}.txt"
    output_file="slurm_output/${model}_p${participant}.out"
    sbatch --export=participant=$participant,model=$model,input=$input_file,output=$output_file /data/gpfs/projects/punim1751/ParAcT/modelling/evansetal-17/normal/round-1/00_slurm-scripts/run-model.txt
  done
done

##DO NOT ADD/EDIT BEYOND THIS LINE##
##Job monitor command to list the resource usage
my-job-stats -a -n -s
